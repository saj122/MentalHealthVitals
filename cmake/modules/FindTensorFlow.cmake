if(TENSORFLOW_INCLUDE_DIR AND TENSORFLOW_LIBRARIES)
	set(TENSORFLOW_FOUND TRUE)
else (TENSORFLOW_INCLUDE_DIR AND TENSORFLOW_LIBRARIES)
	if(NOT WIN32)
		find_path(TENSORFLOW_INCLUDE_DIR 
		NAMES "c_api.h"
		PATHS /usr/local/include/tensorflow/c /usr/include/tensorflow/c
		)

		set(TENSORFLOW_INCLUDE_DIR ${TENSORFLOW_INCLUDE_DIR}/tensorflow)
	endif(NOT WIN32)

	if(WIN32)
		if(NOT TENSORFLOW_INCLUDE_DIR)
			find_path(TENSORFLOW_INCLUDE_DIR 
				NAMES "c_api.h"
				PATHS
				${_obIncDir}
				${GNUWIN32_DIR}/include
				$ENV{TENSORFLOW_INCLUDE_DIR}
			)
		if(TENSORFLOW_INCLUDE_DIR)
			set(TENSORFLOW_INCLUDE_DIR ${TENSORFLOW_INCLUDE_DIR}/tensorflow)
		endif(TENSORFLOW_INCLUDE_DIR)
		endif(NOT TENSORFLOW_INCLUDE_DIR)
	endif(WIN32)

	find_library(TENSORFLOW_LIBRARIES 
		NAMES tensorflow
		PATHS
		${_obLinkDir}
		${GNUWIN32_DIR}/lib
		/usr/local/lib
		/usr/lib	
		$ENV{TENSORFLOW_LIBRARIES}
	)

	if(TENSORFLOW_INCLUDE_DIR AND TENSORFLOW_LIBRARIES)
		set(TENSORFLOW_FOUND TRUE)
	endif(TENSORFLOW_INCLUDE_DIR AND TENSORFLOW_LIBRARIES)

	if (TENSORFLOW_FOUND)
		if (NOT TensorFlow_FIND_QUIETLY)
			message(STATUS "Found TensorFlow: ${TENSORFLOW_LIBRARIES}")
		endif (NOT TensorFlow_FIND_QUIETLY)
	else (TENSORFLOW_FOUND)
		if (TensorFlow_FIND_REQUIRED)
			message(FATAL_ERROR "Could NOT find TensorFlow.")
		endif (TensorFlow_FIND_REQUIRED)
	endif (TENSORFLOW_FOUND)

	mark_as_advanced(TENSORFLOW_INCLUDE_DIR TENSORFLOW_LIBRARIES)
endif(TENSORFLOW_INCLUDE_DIR AND TENSORFLOW_LIBRARIES)