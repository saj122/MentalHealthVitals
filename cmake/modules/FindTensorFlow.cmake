if(TENSORFLOW_INCLUDE_DIR AND TENSORFLOW_LIBRARIES)
	set(TENSORFLOW_FOUND TRUE)
else (TENSORFLOW_INCLUDE_DIR AND TENSORFLOW_LIBRARIES)
	if(NOT WIN32)
		find_path(TENSORFLOW_INCLUDE_DIR 
		NAMES "tensorflow/c/c_api.h"
		PATHS /usr/local/include
		)

		set(TENSORFLOW_INCLUDE_DIR ${TENSORFLOW_INCLUDE_DIR})
	endif(NOT WIN32)

	if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "amd64")
		find_library(TENSORFLOW_LIBRARIES
			NAMES tensorflow
			PATHS
			${_obLinkDir}
			${GNUWIN32_DIR}/lib
			/usr/local/lib
			/usr/lib
			$ENV{TENSORFLOW_LIBRARIES}
		)
	else()
		find_library(TENSORFLOW_LIBRARIES
				NAMES tensorflowlite_c
				PATHS
				${_obLinkDir}
				${GNUWIN32_DIR}/lib
				/usr/local/lib
				/usr/lib
				$ENV{TENSORFLOW_LIBRARIES}
		)
	endif()


	if(TENSORFLOW_INCLUDE_DIR AND TENSORFLOW_LIBRARIES)
		set(TENSORFLOW_FOUND TRUE)
	endif(TENSORFLOW_INCLUDE_DIR AND TENSORFLOW_LIBRARIES)

	if (TENSORFLOW_FOUND)
		if (NOT TensorFlow_FIND_QUIETLY)
			message(STATUS "Found TensorFlow Headers: ${TENSORFLOW_INCLUDE_DIR}")
			message(STATUS "Found TensorFlow Libraries: ${TENSORFLOW_LIBRARIES}")
		endif (NOT TensorFlow_FIND_QUIETLY)
	else (TENSORFLOW_FOUND)
		if (TensorFlow_FIND_REQUIRED)
			message(FATAL_ERROR "Could NOT find TensorFlow.")
		endif (TensorFlow_FIND_REQUIRED)
	endif (TENSORFLOW_FOUND)

	mark_as_advanced(TENSORFLOW_INCLUDE_DIR TENSORFLOW_LIBRARIES)
endif(TENSORFLOW_INCLUDE_DIR AND TENSORFLOW_LIBRARIES)